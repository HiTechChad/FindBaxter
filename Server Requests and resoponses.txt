

1. GET USERS

Synopsis:
	client 1: 			need list of users
	server: 			finds list
	server response: 	heres a list

@request:
- verb: get_users
- access_token : user's access token for authentication validation


@response:
[
	{
		userId		: <USER ID>,
		first_name 	: <FIRST NAME>,
		last_name 	: <LAST NAME>,
		pic 		: <PIC URL> 
		email 		: <EMAIL>
	},
	...
]





2. Request Meeting


Synopsis:
	client 1: 		I would like a meeting with this person
	server: 		checks that persons availability settings
	server: 		I will request it with the teacher
	server: 		sends request to send text
	server response: 	ok i have sent a request waiting for response
	client 2: 			sure ok
	server: 			ok setting up meeting
	server response: 		your meeting is set for 00:00

@request:
- access_token : user's access token for authentication validation

@response

	contact : [
		{
			userId		: <USER ID>,
			first_name 	: <FIRST NAME>,
			last_name 	: <LAST NAME>,
			email 		: <EMAIL>
		}
	]
	sendrequest(userId){
		prefs : [
		     {
			available	: <BOOL>,
			busyTime	: <12:00 - 1:00>,
		]
		if (prefs[busyTime] != current time){
			if(prefs[available]){
				Twillo.sendsms(userId)
				print "sms sent"
			} else{print "not sent"}} else{print "not sent"}		
	}


	checkresponse(){
		for i in 40{
			if (twillo.check()){
				return twillow.response
			}
			delay 15 seconds //times out after 10 minutes, 600 seconds in 10 minutes. if it requests every 15 seconds it should request 40 times total
		}
	}
	
	
	
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
client 2: 			sure ok
server: 			ok setting up meeting
server response: 		your meeting is set for 00:00
server:				availability settings changed
server:				grace period time starts
server:				meeting timer starts
server:				timer ends
server:				availability settings changed






getPerson
- @param: 
	{ name : <name string> }
	
- @return PERSON OBJECT:
	{
		name : <name string>,
		pic: <pic path string (relative path to an image file)>,
		email: <email string>
	}
	
	
getPeople
- @param:
	// if no param, return all people
	
- @return PEOPLE LIST
	[
		{ person (see above)},
		{ person (see above)}
	]
	
	