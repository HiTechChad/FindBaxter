<<<<<<< HEAD
client 1: 			I need list of users
server: 			finds list
server response: 		heres a list
=======


1. GET USERS

/getUsers

Synopsis:
	client 1: 		need list of users
	server: 		finds list
	server response: 	heres a list

@request:
- access_token : user's access token for authentication validation


@response:

{
	total : <TOTAL NUMBER>,

	contacts : [
		{
			userId		: <USER ID>,
			first_name 	: <FIRST NAME>,
			last_name 	: <LAST NAME>,
			email 		: <EMAIL>
		}
		..
	]
}






>>>>>>> 2785269d66bd6d47439a2a7e07cce9ac8ce04632
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
client 1: 			I would like a meeting with this person
server: 			checks that persons availability settings
server: 			I will request it with the teacher
server: 			sends request to send text
server response: 		ok i have sent a request
========

/RequestMeeting


Synopsis:
	client 1: 		I would like a meeting with this person
	server: 		checks that persons availability settings
	server: 		I will request it with the teacher
	server: 		sends request to send text
	server response: 	ok i have sent a request waiting for response
	client 2: 			sure ok
	server: 			ok setting up meeting
	server response: 		your meeting is set for 00:00

@request:
- access_token : user's access token for authentication validation

@response

	contact : [
		{
			userId		: <USER ID>,
			first_name 	: <FIRST NAME>,
			last_name 	: <LAST NAME>,
			email 		: <EMAIL>
		}
	]
	sendrequest(userId){
		prefs : [
		     {
			available	: <BOOL>,
			busyTime	: <12:00 - 1:00>,
		]
		if (prefs[busyTime] != current time){
			if(prefs[available]){
				Twillo.sendsms(userId)
				print "sms sent"
			} else{print "not sent"}} else{print "not sent"}		
	}


	checkresponse(){
		for i in 40{
			if (twillo.check()){
				return twillow.response
			}
			delay 15 seconds //times out after 10 minutes, 600 seconds in 10 minutes. if it requests every 15 seconds it should request 40 times total
		}
	}
	
	
	
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
client 2: 			sure ok
server: 			ok setting up meeting
server response: 		your meeting is set for 00:00
server:				availability settings changed
server:				grace period time starts
server:				meeting timer starts
server:				timer ends
server:				availability settings changed
